{"meta":{"title":"Littlecyj","subtitle":null,"description":null,"author":"Littlecyj","url":"http://yoursite.com"},"pages":[{"title":"About","date":"2017-09-11T15:59:40.267Z","updated":"2017-09-11T15:59:40.267Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":""},{"title":"Categories","date":"2017-09-11T15:59:40.267Z","updated":"2017-09-11T15:59:40.267Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"Tags","date":"2017-09-11T15:59:40.267Z","updated":"2017-09-11T15:59:40.267Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"caffe下如何合并两个lmdb数据库——方法1","slug":"caffe下如何合并两个lmdb数据库","date":"2017-09-16T15:36:37.000Z","updated":"2017-09-19T14:28:57.612Z","comments":true,"path":"2017/09/16/caffe下如何合并两个lmdb数据库/","link":"","permalink":"http://yoursite.com/2017/09/16/caffe下如何合并两个lmdb数据库/","excerpt":"当使用caffe训练网络时，会常常遇到需要增加训练样本的情况，如果在训练数据本身特别大的情况下，重新生成lmdb数据库会非常耗时，因此需要采取方法将两个lmdb进行合并，经实测合并lmdb数据库的时间远远小于重新生成的时间。 合并两个lmdb数据库需要注意以下两个问题： 要考虑新插入的样本在数据库中分布均匀的问题。 要注意需要重构lmdb数据库的关键字 要解决第一个问题，需要计算两个lmdb数据库的大小也就是样本数量，然后按比例插入新的样本。其次就需要了解caffe中关键字的命名方式，如下图所示：从上图中可以看关键字的命名方式为：序号(样本数)+”_”+文件名。经过实测在lmdb数据库中数据是以序号进行排序（B+tree）的，因此需要对插入的样本的序号进行重构，否则会导致样本分布不均匀。","text":"当使用caffe训练网络时，会常常遇到需要增加训练样本的情况，如果在训练数据本身特别大的情况下，重新生成lmdb数据库会非常耗时，因此需要采取方法将两个lmdb进行合并，经实测合并lmdb数据库的时间远远小于重新生成的时间。 合并两个lmdb数据库需要注意以下两个问题： 要考虑新插入的样本在数据库中分布均匀的问题。 要注意需要重构lmdb数据库的关键字 要解决第一个问题，需要计算两个lmdb数据库的大小也就是样本数量，然后按比例插入新的样本。其次就需要了解caffe中关键字的命名方式，如下图所示：从上图中可以看关键字的命名方式为：序号(样本数)+”_”+文件名。经过实测在lmdb数据库中数据是以序号进行排序（B+tree）的，因此需要对插入的样本的序号进行重构，否则会导致样本分布不均匀。以下代码中，假设文件名命名方式为：categoriespath/00001.jpg,那么在lmdb中关键字为：00000001_categoriespath/00001.jpg 代码如下：12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758#encoding:utf-8import lmdbimport timeimport sysenv_1 = lmdb.open(\"lmdbpath1\") env_2 = lmdb.open(\"lmdbpath2\") # 创建事务txn_1 = env_1.begin()txn_2 = env_2.begin()# 打开数据库database_1 = txn_1.cursor()database_2 = txn_2.cursor()## 计算数据库中样本的数量first_key1 = database_1.first()start_index1 = int(database_1.item()[0].split(\"_\")[0]) last_key1 = database_1.last() last_index1 = int(database_1.item()[0].split(\"_\")[0]) db1_num = last_index1-start_index1 + 1 # 第一个lmdb数据库的样本数first_key2 = database_2.first()start_index2 = int(database_2.item()[0].split(\"_\")[0]) last_key2 = database_2.last() last_index2 = int(database_2.item()[0].split(\"_\")[0]) db2_num = last_index2-start_index2 + 1 # 第二个lmdb数据库的样本数# 根据样本总数计算每隔多少个样本插入一个新样本gap_num = int((float(db1_num)/(db2_num+1)) + 1) # 不能保证要插入的数据库中所有样本都能插入到新的数据库中## 将数据库各自cursor指针还原到最初位置。database_1 = txn_1.cursor()database_2 = txn_2.cursor()it = iter(database_2)it = database_2.iternext() # 创建迭代器env_3 = lmdb.open(\"lmdb_new_path3)\", map_size=int(1e13)) # 新建一个数据库,大小设置为1e13，足够大。txn_3 = env_3.begin(write=True) # 可以写入count = 0 flag = 0current_index = 0 # 重构index索引for (key, value) in database_1: # 将数据放到结果数据库事务 key_list = key.split(\"_\") key_list2 = key.split(\"/\") key = str(current_index).zfill(8) + \"_\" + key_list[1].split(\"/\")[0] + \"/\" + key_list2[1] # 重构关键字key txn_3.put(key, value) count += 1 current_index += 1 # 得到当前index索引序号 # 在原数据库中每隔gap_num个数据插入一个新样本，必须保证（db1_num/gap_num) &lt; db2_num ，不然会报错 if (count%gap_num == 0): key2,value2 = it.next() key2_list = key2.split(\"_\") key2_list2 = key2.split(\"/\") key2 = str(current_index).zfill(8) + \"_\" + key2_list[1].split(\"/\")[0] +\"/\" +key2_list2[1] txn_3.put(key2,value2) count = 0 txn_3.commit() # 样本提交数据库 txn_3 = env_3.begin(write=True) current_index += 1 if(count % gap_num != 0): # 提交剩余的样本 txn_3.commit() txn_3 = env_3.begin(write=True) 上述方法为了保证插入样本在数据库中均匀分布需要对每一个样本的关键字进行重构那么还是需要花费一定的时间。还有一种更快的合并lmdb数据库的方式，不需要对关键字进行重构，可以参考下一篇博客。","categories":[{"name":"caffe","slug":"caffe","permalink":"http://yoursite.com/categories/caffe/"}],"tags":[{"name":"caffe","slug":"caffe","permalink":"http://yoursite.com/tags/caffe/"},{"name":"lmdb","slug":"lmdb","permalink":"http://yoursite.com/tags/lmdb/"}]}]}